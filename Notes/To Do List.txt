## Goals:
1) Write 1-2 More Image Enhancement Algorithms (Old) (Threshholding and Gaussian Smoothing or Denoising)
2) Write 1-2 New Image Enhancement Algorithms, that haven't been implemented in CUDA yet (its ok if they have)
3) Do Optimizations
4) Compile Performance Results

## To Do Today:



## To Do this Week:
[ ] RGB to HSV Color Space

## To Do next Week:
[ ] (FORGET EVERYTHING DO THIS) Implement 1 New IE Algo



// [ ] Implement Thresholding
// [ ] Do 1 Optimization


## Optimize Memory Transfers to Increase Speed
To Minimize Memory Transfers:
	Host to Device Mem Transfer needs to happen only a few times ( When the Image is Loaded/Reloaded from Disk )
	No Changes to the Source Image Must happen from the Host.
	Only Mem Transfer from GPU to CPU can happen upon request.

## Research on CUDA Memory Transfers
Use Pinned Memory if Possible cuz Faster!


## Research on CUDA Memory Space
Misaligned Memory Access can decrease Performance.

## Structure the Program
BETTER FOR NOW:
	Build Independent Systems that can be coordinated together by the main function.
	Example -> MemTransferSystem configures the PC for best performant memory transfer, and handles all memory transfers.

(Not gonna do it) Suggestion:
	GPU -> Server
	CPU Cores/Threads -> Client(s)
	We send requests from client to server to get and retreive data and perform operations.



## Notes:
Image will have to be copied back from GPU for display

## Memory Transfers: MINIMIZE AND OPTIMIZE
Host to Device -> Sending Source Image from CPU to GPU
Device to Host -> Sending Changed Image from GPU to CPU

## Our Flow:
Initialization Step: Load an Image onto CPU and GPU Memory
Input Step: Select the Enhancement
Update Step: Update Image in GPU Memory -> Then Copy Back to CPU Memory for Display
